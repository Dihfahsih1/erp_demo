# Generated by Django 4.1.13 on 2025-05-13 13:12

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('phone', models.CharField(blank=True, max_length=20, verbose_name='Phone Number')),
                ('is_verified', models.BooleanField(blank=True, default=False, null=True, verbose_name='Verified by Admin')),
            ],
            options={
                'permissions': [('can_delete_employee', 'Can delete employee records')],
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_of_business', models.CharField(blank=True, max_length=200, null=True)),
                ('district', models.CharField(blank=True, max_length=100, null=True)),
                ('road_location', models.CharField(blank=True, max_length=150, null=True)),
                ('town_division', models.CharField(blank=True, max_length=100, null=True)),
                ('nearest_landmark', models.CharField(blank=True, max_length=150, null=True)),
                ('tel_1', models.CharField(blank=True, max_length=15, null=True)),
                ('tel_2', models.CharField(blank=True, max_length=15, null=True)),
                ('owner_name', models.CharField(blank=True, max_length=100, null=True)),
                ('owner_tel', models.CharField(blank=True, max_length=15, null=True)),
                ('next_of_kin', models.CharField(blank=True, max_length=100, null=True)),
                ('next_of_kin_tel', models.CharField(blank=True, max_length=15, null=True)),
                ('approved_by', models.CharField(blank=True, max_length=100, null=True)),
                ('prepared_by', models.CharField(blank=True, max_length=100, null=True)),
                ('prepared_date', models.DateField(blank=True, null=True)),
                ('remarks', models.TextField(blank=True, null=True)),
                ('location', models.CharField(blank=True, max_length=255, null=True)),
                ('certificate_of_incorporation', models.FileField(blank=True, null=True, upload_to='documents/certificates/')),
                ('passport_photo', models.ImageField(blank=True, null=True, upload_to='photos/passports/')),
                ('trading_license', models.ImageField(blank=True, null=True, upload_to='photos/license/')),
                ('national_id', models.ImageField(blank=True, null=True, upload_to='photos/national_id/')),
                ('date_filled', models.DateTimeField(auto_now_add=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Delivery',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('delivery_note_number', models.CharField(blank=True, max_length=100, null=True)),
                ('delivery_date', models.DateField(blank=True, null=True)),
                ('receiver_name', models.CharField(blank=True, max_length=100, null=True)),
                ('receiver_contact', models.CharField(blank=True, max_length=20, null=True)),
                ('date_goods_received', models.DateField(blank=True, null=True)),
                ('delivery_status', models.CharField(blank=True, choices=[('pending', 'Pending'), ('being_processed', 'Being Processed'), ('received', 'Received'), ('rejected', 'Rejected')], default='pending', max_length=20, null=True)),
                ('delivery_person', models.CharField(blank=True, max_length=100, null=True)),
                ('remarks', models.TextField(blank=True, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='delivery_notes/')),
                ('extracted_text', models.TextField(blank=True, null=True)),
                ('created_at', models.CharField(blank=True, max_length=100, null=True)),
                ('updated_at', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True, verbose_name='Department Name')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
            ],
            options={
                'verbose_name': 'Department',
                'verbose_name_plural': 'Departments',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Estimate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateField(blank=True, null=True, verbose_name='Date When Estimate was Created')),
                ('bk_estimate_id', models.CharField(help_text='Reference ID from Bookkeeping System', max_length=20, unique=True, verbose_name='BK Estimate ID')),
                ('amount', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('submitted', 'Submitted'), ('verified', 'Verified'), ('on-hold', 'On Hold'), ('rejected', 'Rejected'), ('cancelled', 'Cancelled'), ('billed', 'Billed'), ('dispatched', 'Dispatched'), ('delivered', 'Delivered (Signed)')], default='draft', max_length=20, verbose_name='Status')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Last Updated')),
                ('invoice_number', models.CharField(blank=True, max_length=100, null=True)),
                ('invoice_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('date_verified', models.DateField(blank=True, null=True)),
                ('date_billed', models.DateField(blank=True, null=True)),
                ('billing_officer', models.ForeignKey(blank=True, limit_choices_to={'role__name': 'billing Officer'}, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='billing_officer_estimates', to=settings.AUTH_USER_MODEL)),
                ('customer_name', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='estimates', to='erp.customer', verbose_name='Customer')),
                ('sales_person', models.ForeignKey(blank=True, limit_choices_to={'role__name': 'Sales Officer'}, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='estimates_as_sales_person', to=settings.AUTH_USER_MODEL)),
                ('verified_by', models.ForeignKey(blank=True, limit_choices_to={'role__name': 'Credit Officer'}, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='Verifying_Customer_Credit_Worthiness', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Estimate',
                'verbose_name_plural': 'Estimates',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='RegionOfOperation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True, verbose_name='Region Name')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
            ],
            options={
                'verbose_name': 'Region',
                'verbose_name_plural': 'Regions',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='SparePart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Part Name')),
                ('sku', models.CharField(help_text='Matching BK system SKU', max_length=50, unique=True, verbose_name='SKU')),
                ('current_stock', models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Current Stock')),
                ('unit_price', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Unit Price')),
            ],
            options={
                'verbose_name': 'Spare Part',
                'verbose_name_plural': 'Spare Parts',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='UserRole',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True, verbose_name='Role Name')),
                ('description', models.TextField(blank=True, verbose_name='Role Description')),
            ],
            options={
                'verbose_name': 'Role',
                'verbose_name_plural': 'Roles',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Verification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notes', models.TextField(blank=True, verbose_name='Verification Notes')),
                ('verification_date', models.DateTimeField(auto_now_add=True, verbose_name='Verification Date')),
                ('estimate', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='verification', to='erp.estimate', verbose_name='Estimate')),
                ('verified_by', models.ForeignKey(limit_choices_to={'department__name': 'Verification'}, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='Verified By')),
            ],
            options={
                'verbose_name': 'Verification',
                'verbose_name_plural': 'Verifications',
                'ordering': ['-verification_date'],
            },
        ),
        migrations.CreateModel(
            name='StoresReconciliation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('discrepancies', models.TextField(blank=True, verbose_name='Discrepancy Notes')),
                ('reconciliation_date', models.DateTimeField(auto_now_add=True, verbose_name='Reconciliation Date')),
                ('estimate', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='reconciliation', to='erp.estimate', verbose_name='Estimate')),
                ('reconciled_by', models.ForeignKey(limit_choices_to={'department__name': 'Stores'}, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='Reconciled By')),
            ],
            options={
                'verbose_name': 'Stores Reconciliation',
                'verbose_name_plural': 'Stores Reconciliations',
                'ordering': ['-reconciliation_date'],
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.CharField(max_length=200, verbose_name='Notification Message')),
                ('is_read', models.BooleanField(default=False, verbose_name='Read Status')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('estimate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='erp.estimate', verbose_name='Estimate')),
                ('recipient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL, verbose_name='Recipient')),
            ],
            options={
                'verbose_name': 'Notification',
                'verbose_name_plural': 'Notifications',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Dispatch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('office_gate_pass', models.CharField(blank=True, max_length=100, null=True)),
                ('store_gate_pass', models.CharField(blank=True, max_length=100, null=True)),
                ('date_of_dispatch', models.DateField(blank=True, null=True)),
                ('authorized_by', models.ForeignKey(blank=True, limit_choices_to={'department__name': 'Stores'}, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='authorizing_officer_stores', to=settings.AUTH_USER_MODEL)),
                ('estimate_number', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='Dispatches', to='erp.estimate')),
                ('packaging_verified_by', models.ForeignKey(blank=True, limit_choices_to={'department__name': 'Stores'}, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='verifying_officer_stores', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='DeliveryItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item_code', models.CharField(blank=True, max_length=100, null=True)),
                ('item_description', models.CharField(max_length=255)),
                ('quantity', models.FloatField(default=1)),
                ('delivery_note', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='erp.delivery')),
            ],
        ),
        migrations.AddField(
            model_name='delivery',
            name='estimate_number',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='Deliverys', to='erp.estimate'),
        ),
        migrations.AddField(
            model_name='delivery',
            name='sales_person',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='employee',
            name='department',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='employees', to='erp.department', verbose_name='Department'),
        ),
        migrations.AddField(
            model_name='employee',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to.', related_name='employee_set', related_query_name='employee', to='auth.group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='employee',
            name='region_of_operation',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='employees', to='erp.regionofoperation', verbose_name='Region of Operation'),
        ),
        migrations.AddField(
            model_name='employee',
            name='role',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='employee_role', to='erp.userrole', verbose_name='Role'),
        ),
        migrations.AddField(
            model_name='employee',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='employee_set', related_query_name='employee', to='auth.permission', verbose_name='user permissions'),
        ),
        migrations.CreateModel(
            name='EstimateItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(default=1, validators=[django.core.validators.MinValueValidator(1)], verbose_name='Quantity')),
                ('negotiated_price', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Negotiated Price')),
                ('estimate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='erp.estimate', verbose_name='Estimate')),
                ('part', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='erp.sparepart', verbose_name='Spare Part')),
            ],
            options={
                'verbose_name': 'Estimate Item',
                'verbose_name_plural': 'Estimate Items',
                'unique_together': {('estimate', 'part')},
            },
        ),
    ]
